// File Name: temp.cpp
// Author: darkdream
// Created Time: 2014年09月17日 星期三 11时35分45秒

#include<vector>
#include<list>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<ctime>
#define LL long long
#define m  1000000007
using namespace std;
LL  n , d,k; 
LL  a0 ,ax,ay;
LL  b0 ,bx,by;
int  ta,tb;
struct Matrix
{
   LL   mat[15][15];
   void clear()
   {
      memset(mat,0,sizeof(mat));
   }
   void output()
   {
     for(int i = 0  ;i < n ;i ++)
	 {
	   for(int j = 0 ;j < n ;j ++)
		   printf("%lld ",mat[i][j]);
	 printf("\n");
	 }
   }
   void init()
   {
	  clear();
	  mat[0][0] = ax*bx %m ; 
	  mat[0][1] = ax*by %m ; 
	  mat[0][2] = bx*ay %m ;
      mat[0][3] = 1;
	  mat[1][1] = ax%m;
	  mat[1][4] = 1;;
	  mat[2][2] = bx%m; 
	  mat[2][5] = 1;
	  mat[3][3] = 1;
	  mat[4][4] = 1;
	  mat[5][5] = 1;
	  mat[6][0] = 1;
	  mat[6][6] = 1; 
	  n = 7 ;
   }
   Matrix operator *(const Matrix &b) const
   {
       Matrix ret;
       ret.clear();
	   for(int i = 0 ;i < n ;i ++)
		   for(int j = 0;j < n;j ++)
		   {
			   for(int s = 0 ;s < n ;s ++)
			   {
		         ret.mat[i][j] =(ret.mat[i][j] + mat[i][s] * b.mat[s][j]) %m  ; // 第I 行  第J  列	    
			   }
		   }
	   return ret;
   }
};
Matrix Pow( Matrix a ,LL t )
{
  Matrix ret;
  ret.clear();
  for(int i = 0 ;i < n ;i ++)
	   ret.mat[i][i] = 1;
  Matrix tmp = a; 
  while(t)
  {
      if(t&1) ret = ret * tmp;
      tmp = tmp * tmp;
	  t >>=1;
  }
  return ret;
}
int main(){

	while(scanf("%lld",&k) != EOF)
	{
       scanf("%lld %lld %lld",&a0,&ax,&ay);
	   scanf("%lld %lld %lld",&b0,&bx,&by);
       Matrix a;
	   a.init();
	   if(k == 0 )
	   {	   printf("0\n");
	      continue;
	   }
       Pow(a,k);
	   a.output();
	   LL ans = 0 ; 
	   ans = a.mat[6][0]* a0*b0% m ;
	   printf("%lld\n",ans);
	}
	return 0;
}
